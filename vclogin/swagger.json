{
  "swagger": "2.0",
  "info": {
    "title": "SSI-to-OIDC Bridge Dynamic API",
    "description": "API documentation for dynamic API",
    "version": "1.0.0"
  },
  "host": "localhost:5002",
  "schemes": ["http"],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "API key required to authenticate requests. Format: 'API_KEY <your_api_key>'"
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/api/dynamic/createTempAuthorization": {
      "post": {
        "summary": "Create temporary authorization and store authorization policy and input descriptor",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Authorization policy",
            "schema": {
              "type": "object",
              "properties": {
                "policy": {
                  "type": "object",
                  "description": "Policy to be stored",
                  "example": [
                    {
                      "credentialId": "1",
                      "type": "VerifiableId",
                      "patterns": [
                        {
                          "issuer": "did:web:app.altme.io:issuer",
                          "claims": [
                            {
                              "claimPath": "$.credentialSubject.firstName"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "inputDescriptor": {
                  "type": "object",
                  "description": "Input descriptor to be stored",
                  "nullable": true,
                  "example": [
                    {
                      "id": "input_descriptor_1",
                      "name": "Input descriptor for authorization",
                      "purpose": "Please provide a valid Verifiable Id VC",
                      "constraints": {
                        "fields": [
                          {
                            "path": ["$.credentialSubject.type"],
                            "filter": {
                              "type": "string",
                              "pattern": "VerifiableId"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "required": ["policy"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "description": "UUID of the created temporary authorization"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/dynamic/getQRCodeString": {
      "get": {
        "summary": "Get QR code string by UUID",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Authorization policy",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "description": "UUID of the temporary authorization",
                  "example": "9d2b91fe-ab18-4a61-9b33-3d06e8d6c96f"
                },
                "userId": {
                  "type": "string",
                  "description": "userId of the user",
                  "nullable": true,
                  "example": "did:key:z6Mkj5B9HcSKWGuuawpBcvy5wQwZJ9g2k5HzfmXPAjwbQ9TT"
                }
              },
              "required": ["policy"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "qrCodeString": {
                  "type": "string",
                  "description": "QR code string",
                  "example": "openid-vc://?client_id=did:key:z6Mkj5B9HcSKWGuuawpBcvy5wQwZJ9g2k5HzfmXPAjwbQ9TT&request_uri=https%3A%2F%2Fexample.com%2Fapi%2Fdynamic%2FpresentCredentialById%3Flogin_id%3D9b25be26-8939-4a8c-a6da-9a145fa8242d"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/dynamic/getAuthResponse": {
      "get": {
        "summary": "Get authtorization response and user claims by UUID",
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "UUID to fetch auth_res and claims",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "auth_res": {
                  "type": "string",
                  "description": "Authentication result",
                  "enum": [
                    "success",
                    "error_presentation_not_trused",
                    "error_invalid_presentation",
                    "error_not_found"
                  ],
                  "example": "success"
                },
                "claims": {
                  "type": "object",
                  "description": "User claims"
                }
              }
            }
          }
        }
      }
    }
  }
}
